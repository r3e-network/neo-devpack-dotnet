events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 10M;

    upstream api {
        server r3e-webgui-service:8080;
    }

    # HTTP redirect
    server {
        listen 80;
        listen [::]:80;
        server_name service.neoservicelayer.com;
        
        # Lets Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name service.neoservicelayer.com;
        
        ssl_certificate /etc/letsencrypt/live/service.neoservicelayer.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/service.neoservicelayer.com/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Root redirect to /contracts
        location = / {
            return 301 https://$server_name/contracts;
        }
        
        # Main contracts page
        location /contracts {
            proxy_pass http://api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $server_name;
        }
        
        location /contracts/ {
            proxy_pass http://api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Host $server_name;
        }

        location /health {
            proxy_pass http://api/health;
            access_log off;
        }
        
        # API endpoints under /contracts/api
        location /contracts/api/ {
            proxy_pass http://api/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            
            if ($request_method = OPTIONS) {
                return 204;
            }
        }
        
        # Keep /api/ for backward compatibility - redirect to new location
        location /api/ {
            rewrite ^/api/(.*)$ /contracts/api/$1 permanent;
        }

        # Swagger UI under /contracts/swagger
        location /contracts/swagger {
            return 301 /contracts/swagger/;
        }

        location /contracts/swagger/ {
            proxy_pass http://api/swagger/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Prefix /contracts/swagger;
        }
        
        # Swagger resources
        location ~ ^/contracts/swagger/(.+\.(css|js|png|jpg|jpeg|gif|json))$ {
            proxy_pass http://api/swagger/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        # API docs - redirect to swagger
        location /contracts/api/docs {
            return 301 /contracts/swagger/;
        }
        
        location /contracts/docs {
            return 301 /contracts/swagger/;
        }
        
        # Redirect old paths
        location /swagger {
            return 301 /contracts/swagger$request_uri;
        }
        
        location /docs {
            return 301 /contracts/docs;
        }
    }
    
    # Catch-all for subdomains without wildcard certificate
    server {
        listen 80;
        listen [::]:80;
        server_name *.service.neoservicelayer.com;
        
        return 301 https://service.neoservicelayer.com$request_uri;
    }
}