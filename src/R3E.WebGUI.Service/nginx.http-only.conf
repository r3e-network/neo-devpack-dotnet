events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security Headers (HTTP only for now)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Hide NGINX version
    server_tokens off;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    
    # Buffer sizes for security
    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/javascript 
        application/xml+rss 
        application/json
        application/xml
        image/svg+xml;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=deploy:10m rate=1r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Upstream for the API service
    upstream r3e_webgui_api {
        server r3e-webgui-service:8888;
        keepalive 32;
    }
    
    # Main server (HTTP)
    server {
        listen 80;
        server_name service.neoservicelayer.com api.service.neoservicelayer.com *.service.neoservicelayer.com;
        
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        limit_conn addr 20;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/html;
            allow all;
        }
        
        # Extract subdomain for contract hosting
        set $subdomain "";
        if ($host ~* "^([^.]+)\.service\.neoservicelayer\.com$") {
            set $subdomain $1;
        }
        
        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://r3e_webgui_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-API-Key" always;
            add_header Access-Control-Allow-Credentials true always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Deploy endpoint with stricter rate limiting
        location /api/webgui/deploy {
            limit_req zone=deploy burst=5 nodelay;
            
            proxy_pass http://r3e_webgui_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Health check
        location /health {
            proxy_pass http://r3e_webgui_api;
            access_log off;
        }
        
        # Main domain information page
        location / {
            if ($host = "service.neoservicelayer.com") {
                return 200 '<!DOCTYPE html>
<html>
<head>
    <title>R3E WebGUI Service</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; border-bottom: 2px solid #007acc; padding-bottom: 10px; }
        .endpoint { background: #f8f9fa; padding: 15px; margin: 15px 0; border-left: 4px solid #007acc; }
        code { background: #e9ecef; padding: 2px 4px; border-radius: 3px; }
        .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; margin: 15px 0; border-radius: 4px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>R3E WebGUI Service</h1>
        <p>Neo Smart Contract WebGUI Hosting Service</p>
        
        <div class="warning">
            <strong>⚠️ Development Mode:</strong> This service is running in HTTP mode for initial setup. SSL certificates will be configured for production use.
        </div>
        
        <h2>API Endpoints</h2>
        <div class="endpoint">
            <strong>API Base URL:</strong> <code>http://api.service.neoservicelayer.com</code><br>
            <strong>Health Check:</strong> <code>http://service.neoservicelayer.com/health</code>
        </div>
        
        <h2>WebGUI Access</h2>
        <div class="endpoint">
            <strong>Pattern:</strong> <code>http://[contract-address].service.neoservicelayer.com</code><br>
            <small>Replace [contract-address] with your deployed contract address</small>
        </div>
        
        <h2>Security Features</h2>
        <ul>
            <li>Rate limiting and DDoS protection</li>
            <li>Security headers</li>
            <li>Malicious request filtering</li>
            <li>SSL/TLS encryption (will be enabled in production)</li>
        </ul>
        
        <h2>Current Status</h2>
        <ul>
            <li>✅ API Service: Running</li>
            <li>✅ Database: Connected</li>
            <li>✅ Rate Limiting: Active</li>
            <li>⏳ SSL Certificates: Pending configuration</li>
        </ul>
    </div>
</body>
</html>';
                add_header Content-Type "text/html; charset=utf-8";
            }
            
            # For subdomains, try to serve WebGUI files
            if ($subdomain != "") {
                if ($subdomain != "api") {
                    # Try to serve files from contract subdomain directory
                    root /var/www/webgui/$subdomain;
                    try_files $uri $uri/ @api_fallback;
                }
            }
            
            # Fallback to API
            error_page 404 = @api_fallback;
        }
        
        # Fallback to API for dynamic serving
        location @api_fallback {
            proxy_pass http://r3e_webgui_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
        }
        
        # Block sensitive files
        location ~ /\. {
            deny all;
        }
        
        location ~ \.(env|config|log|sql|bak|backup)$ {
            deny all;
        }
    }
    
    # Default server block (catch-all)
    server {
        listen 80 default_server;
        server_name _;
        return 444;
    }
}