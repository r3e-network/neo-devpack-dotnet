name: Build Release Artifacts

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            artifact: rncc-linux-x64
          - os: windows-latest
            rid: win-x64
            artifact: rncc-win-x64
          - os: macos-latest
            rid: osx-x64
            artifact: rncc-osx-x64
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Extract version from tag
      shell: bash
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build RNCC binary
      run: |
        dotnet publish src/Neo.Compiler.CSharp.Tool/Neo.Compiler.CSharp.Tool.csproj \
          -c Release \
          -r ${{ matrix.rid }} \
          --self-contained true \
          /p:PublishSingleFile=true \
          /p:PublishTrimmed=false \
          /p:IncludeNativeLibrariesForSelfExtract=true \
          -o ./publish/${{ matrix.rid }}

    - name: Package binary (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd publish/${{ matrix.rid }}
        chmod +x rncc
        tar -czf ../../${{ matrix.artifact }}-v${{ env.VERSION }}.tar.gz rncc
        cd ../..
        ls -la ${{ matrix.artifact }}-v${{ env.VERSION }}.tar.gz

    - name: Package binary (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        cd publish\${{ matrix.rid }}
        Compress-Archive -Path rncc.exe -DestinationPath ..\..\${{ matrix.artifact }}-v${{ env.VERSION }}.zip
        cd ..\..
        dir ${{ matrix.artifact }}-v${{ env.VERSION }}.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}-v${{ env.VERSION }}
        path: |
          ${{ matrix.artifact }}-v${{ env.VERSION }}.tar.gz
          ${{ matrix.artifact }}-v${{ env.VERSION }}.zip

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Extract version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: List artifacts
      run: |
        echo "Downloaded artifacts:"
        find artifacts -type f -name "*.*" | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.tar.gz
          artifacts/**/*.zip
          RELEASE_NOTES_v${{ env.VERSION }}.md
          CHANGELOG.md
          QUICK_START_v${{ env.VERSION }}.md
          MIGRATION_GUIDE_v${{ env.VERSION }}.md
        body_path: RELEASE_NOTES_v${{ env.VERSION }}.md
        name: R3E DevPack v${{ env.VERSION }}
        draft: false
        prerelease: false
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}